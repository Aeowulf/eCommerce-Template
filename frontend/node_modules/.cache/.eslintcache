[{"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\index.js":"1","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\App.js":"2","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\Header.js":"4","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\Product.js":"7","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\Rating.js":"8","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\store.js":"10","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\reducers\\productReducers.js":"11","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\constants\\productConstants.js":"12","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\actions\\productActions.js":"13","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\Message.js":"14","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\Loader.js":"15","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\screens\\CartScreen.js":"16","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\reducers\\cartReducers.js":"17","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\constants\\cartConstants.js":"18","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\actions\\cartActions.js":"19","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\constants\\userConstants.js":"20","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\reducers\\userReducers.js":"21","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\actions\\userActions.js":"22","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\screens\\ProfileScreen.js":"23","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\screens\\RegisterScreen.js":"24","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\screens\\LoginScreen.js":"25","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\FormContainer.js":"26","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\screens\\ShippingScreen.js":"27","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\CheckoutSteps.js":"28"},{"size":630,"mtime":1676605144642,"results":"29","hashOfConfig":"30"},{"size":1937,"mtime":1677379519196,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1675818870937,"results":"32","hashOfConfig":"30"},{"size":1883,"mtime":1677220780178,"results":"33","hashOfConfig":"30"},{"size":365,"mtime":1675995844503,"results":"34","hashOfConfig":"30"},{"size":1048,"mtime":1676684336271,"results":"35","hashOfConfig":"30"},{"size":956,"mtime":1676170267119,"results":"36","hashOfConfig":"30"},{"size":1759,"mtime":1676259194919,"results":"37","hashOfConfig":"30"},{"size":4492,"mtime":1676797158854,"results":"38","hashOfConfig":"30"},{"size":1361,"mtime":1677381728027,"results":"39","hashOfConfig":"30"},{"size":1034,"mtime":1676685289933,"results":"40","hashOfConfig":"30"},{"size":366,"mtime":1676684558150,"results":"41","hashOfConfig":"30"},{"size":1242,"mtime":1676686024425,"results":"42","hashOfConfig":"30"},{"size":274,"mtime":1676684181680,"results":"43","hashOfConfig":"30"},{"size":414,"mtime":1676688330307,"results":"44","hashOfConfig":"30"},{"size":3996,"mtime":1677043570710,"results":"45","hashOfConfig":"30"},{"size":1122,"mtime":1677382058423,"results":"46","hashOfConfig":"30"},{"size":168,"mtime":1677381095165,"results":"47","hashOfConfig":"30"},{"size":1441,"mtime":1677381276064,"results":"48","hashOfConfig":"30"},{"size":870,"mtime":1677220780179,"results":"49","hashOfConfig":"30"},{"size":1959,"mtime":1677220780183,"results":"50","hashOfConfig":"30"},{"size":3841,"mtime":1677220780175,"results":"51","hashOfConfig":"30"},{"size":3835,"mtime":1677220780187,"results":"52","hashOfConfig":"30"},{"size":3460,"mtime":1677220780189,"results":"53","hashOfConfig":"30"},{"size":2426,"mtime":1677220780186,"results":"54","hashOfConfig":"30"},{"size":345,"mtime":1677220780176,"results":"55","hashOfConfig":"30"},{"size":2735,"mtime":1677386543508,"results":"56","hashOfConfig":"30"},{"size":1292,"mtime":1677386544567,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8ppzwf",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\index.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\App.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\Header.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\Footer.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\screens\\HomeScreen.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\Product.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\Rating.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\screens\\ProductScreen.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\store.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\reducers\\productReducers.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\constants\\productConstants.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\actions\\productActions.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\Message.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\Loader.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\screens\\CartScreen.js",["146","147"],[],"import React, { useEffect } from 'react'\r\nimport { Link, useParams, useNavigate, useLocation } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = () => {\r\n  const { productId } = useParams();\r\n\r\n  const history = useNavigate();\r\n\r\n  const location = useLocation();\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector(state => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if(productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history('/login?redirect=shipping')\r\n    {/* Redirects to Shipping screen if user is logged in, otherwise redirects to Login screen */}\r\n  }\r\n  {/* Defining checkoutHandler ahead of time to ensure Checkout button below works properly */}\r\n\r\n  return (<Row>\r\n    <Col md={8}>\r\n      <h1>Shopping Cart</h1>\r\n\r\n      {cartItems.length === 0 \r\n        ? <Message>Your cart is empty <Link to='/'>Go Back</Link></Message> \r\n        : (\r\n        <ListGroup variant='flush'>\r\n          {cartItems.map(item => (\r\n            <ListGroup.Item key={item.product}>\r\n              <Row>\r\n                <Col md={2}>\r\n                  <Image src={item.image} alt={item.name} fluid rounded />\r\n                </Col>\r\n\r\n                <Col md={3}>\r\n                  <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                </Col>\r\n\r\n                <Col md={2}>${item.price}</Col>\r\n\r\n                <Col md={2}>\r\n                  <Form.Select\r\n                    value={item.qty}\r\n\r\n                    onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                  >\r\n                    {[...Array(item.countInStock).keys()].map((x) => (\r\n                      <option key={x + 1} value={x + 1}>\r\n                        {x + 1}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Col>\r\n\r\n                <Col md={2}>\r\n                  <Button \r\n                    type='button' \r\n                    variant='light' \r\n                    onClick={() => removeFromCartHandler(item.product)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n        )\r\n      }\r\n    </Col>\r\n\r\n    <Col md={4}>\r\n      <Card>\r\n        <ListGroup variant='flush'>\r\n          <ListGroup.Item>\r\n            <h2>\r\n              Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items\r\n            </h2>\r\n            {/* Adds up the \"qty\" of every \"item\" in \"cartItems\" to render the total quantity of items in Shopping Cart */}\r\n\r\n            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n            {/* Adds up the \"price\" of every \"item\" in \"cartItems\" to render the total price of items in Shopping Cart */}\r\n            {/* The \".toFixed()\" method converts a number to a string, rounding it to a specified number of decimals; in this case, 2. */}\r\n          </ListGroup.Item>\r\n\r\n          <ListGroup.Item>\r\n            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n              Proceed To Checkout\r\n            </Button>\r\n            {/* Created a button that calls the \"checkoutHandler\" function when clicked. Button is Disabled if cart is empty. */}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </Card>\r\n    </Col>\r\n  </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\reducers\\cartReducers.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\constants\\cartConstants.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\actions\\cartActions.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\constants\\userConstants.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\reducers\\userReducers.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\actions\\userActions.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\screens\\ProfileScreen.js",["148"],[],"import React, { useState, useEffect } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector(state => state.userDetails)\r\n\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n\r\n  const { success } = userUpdateProfile\r\n\r\n  // const location = useLocation()\r\n\r\n  const history = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n        history('/login')\r\n    } else {\r\n        if (!user.name) {\r\n            dispatch(getUserDetails('profile'))\r\n        } else {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n        }\r\n    }\r\n  }, [dispatch, history, userInfo, user])  \r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    \r\n    if (password !== confirmPassword) {\r\n        setMessage('Passwords do not match')\r\n    } else {\r\n        dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n\r\n        {loading && <Loader />}\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n\r\n            <Form.Control \r\n              type='name' \r\n              placeholder='Enter name' \r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label className='margin-top-1point5rem'>Email Address</Form.Label>\r\n\r\n            <Form.Control \r\n              type='email' \r\n              placeholder='Enter email' \r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label className='margin-top-1point5rem'>Password</Form.Label>\r\n\r\n            <Form.Control \r\n              type='password' \r\n              placeholder='Enter password' \r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label className='margin-top-1point5rem'>Confirm password</Form.Label>\r\n\r\n            <Form.Control \r\n              type='password' \r\n              placeholder='Confirm password' \r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary' className='margin-top-1point5rem'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n\r\n      <Col md={9} className='margin-top-1rem'>\r\n        <h2>My Orders</h2>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\screens\\RegisterScreen.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\screens\\LoginScreen.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\FormContainer.js",[],[],"C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\screens\\ShippingScreen.js",["149"],[],"import React, { useState } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = () => {\r\n  const history = useNavigate()\r\n  const location = useLocation()\r\n\r\n  const cart = useSelector(state => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    \r\n    history('/payment')\r\n  }\r\n\r\n  return <FormContainer>\r\n    <CheckoutSteps step1 step2 />\r\n\r\n    <h1>Shipping</h1>\r\n\r\n    <Form onSubmit={submitHandler}>\r\n      <Form.Group controlId='address'>\r\n        <Form.Label>Address</Form.Label>\r\n\r\n        <Form.Control \r\n          type='text' \r\n          placeholder='Enter address' \r\n          value={address}\r\n          required\r\n          onChange={(e) => setAddress(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId='city'>\r\n        <Form.Label className='margin-top-1rem'>City</Form.Label>\r\n\r\n        <Form.Control \r\n          type='text' \r\n          placeholder='Enter city' \r\n          value={city}\r\n          required\r\n          onChange={(e) => setCity(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId='postalCode'>\r\n        <Form.Label className='margin-top-1rem'>Postal Code</Form.Label>\r\n\r\n        <Form.Control \r\n          type='text' \r\n          placeholder='Enter postal code' \r\n          value={postalCode}\r\n          required\r\n          onChange={(e) => setPostalCode(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId='country'>\r\n        <Form.Label className='margin-top-1rem'>Country</Form.Label>\r\n\r\n        <Form.Control\r\n          type='text' \r\n          placeholder='Enter country' \r\n          value={country}\r\n          required\r\n          onChange={(e) => setCountry(e.target.value)}\r\n        ></Form.Control>\r\n      </Form.Group>\r\n\r\n      <Button type='submit' variant='primary' className='margin-top-1rem'>\r\n        Continue\r\n      </Button>\r\n    </Form>\r\n  </FormContainer>\r\n}\r\n\r\nexport default ShippingScreen","C:\\Users\\alexa\\OneDrive\\Desktop\\eCommerce Template\\frontend\\src\\components\\CheckoutSteps.js",[],[],{"ruleId":"150","severity":1,"message":"151","line":34,"column":5,"nodeType":"152","messageId":"153","endLine":34,"endColumn":99},{"ruleId":"150","severity":1,"message":"151","line":36,"column":3,"nodeType":"152","messageId":"153","endLine":36,"endColumn":96},{"ruleId":"154","severity":1,"message":"155","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":21},{"ruleId":"154","severity":1,"message":"158","line":11,"column":9,"nodeType":"156","messageId":"157","endLine":11,"endColumn":17},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'location' is assigned a value but never used."]