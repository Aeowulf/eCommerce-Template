{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\n// import { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\n\n// const middleware = [thunk]\n\n// const store = configureStore({\n//   reducer,\n//   initialState\n// })\n\nconst store = configureStore({\n  reducer,\n  preloadedState: initialState\n});\nexport default store;","map":{"version":3,"names":["combineReducers","configureStore","thunk","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","reducer","productList","productDetails","cart","userLogin","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","store","preloadedState"],"sources":["C:/Users/alexa/OneDrive/Desktop/eCommerce Template/frontend/src/store.js"],"sourcesContent":["import { combineReducers } from 'redux'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk'\r\n// import { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer } from './reducers/userReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') \r\n  ? JSON.parse(localStorage.getItem('cartItems')) \r\n  : []\r\n\r\nconst initialState = {\r\n  cart: { cartItems: cartItemsFromStorage },\r\n}\r\n\r\n// const middleware = [thunk]\r\n\r\n// const store = configureStore({\r\n//   reducer,\r\n//   initialState\r\n// })\r\n\r\nconst store = configureStore({\r\n  reducer, \r\n  preloadedState: initialState\r\n})\r\n\r\nexport default store"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,KAAK,MAAM,aAAa;AAC/B;AACA,SAASC,kBAAkB,EAAEC,qBAAqB,QAAQ,4BAA4B;AACtF,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,gBAAgB,QAAQ,yBAAyB;AAE1D,MAAMC,OAAO,GAAGP,eAAe,CAAC;EAC9BQ,WAAW,EAAEL,kBAAkB;EAC/BM,cAAc,EAAEL,qBAAqB;EACrCM,IAAI,EAAEL,WAAW;EACjBM,SAAS,EAAEL;AACb,CAAC,CAAC;AAEF,MAAMM,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;AAEN,MAAMG,YAAY,GAAG;EACnBP,IAAI,EAAE;IAAEQ,SAAS,EAAEN;EAAqB;AAC1C,CAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA,MAAMO,KAAK,GAAGlB,cAAc,CAAC;EAC3BM,OAAO;EACPa,cAAc,EAAEH;AAClB,CAAC,CAAC;AAEF,eAAeE,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}