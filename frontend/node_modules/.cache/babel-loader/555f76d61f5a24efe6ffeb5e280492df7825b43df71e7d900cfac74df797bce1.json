{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\OneDrive\\\\Desktop\\\\eCommerce Template\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { orderListMy } from '../actions/orderActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileScreen = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = orderListMy;\n\n  // const location = useLocation()\n\n  const history = useNavigate();\n  useEffect(() => {\n    if (!userInfo) {\n      history('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n  const submitHandler = e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: \"Profile Updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"margin-top-1point5rem\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"margin-top-1point5rem\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"margin-top-1point5rem\",\n            children: \"Confirm password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"margin-top-1point5rem\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      className: \"margin-top-1rem\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileScreen, \"2XZ1gzRpKBQam5avTJs8BdMbTZM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useNavigate];\n});\n_c = ProfileScreen;\nexport default ProfileScreen;\nvar _c;\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","orderListMy","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","loadingOrders","errorOrders","orders","history","submitHandler","e","preventDefault","id","_id","target","value"],"sources":["C:/Users/alexa/OneDrive/Desktop/eCommerce Template/frontend/src/screens/ProfileScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { orderListMy } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading:loadingOrders, error:errorOrders, orders } = orderListMy\r\n\r\n  // const location = useLocation()\r\n\r\n  const history = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n        history('/login')\r\n    } else {\r\n        if (!user.name) {\r\n            dispatch(getUserDetails('profile'))\r\n        } else {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n        }\r\n    }\r\n  }, [dispatch, history, userInfo, user])  \r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    \r\n    if (password !== confirmPassword) {\r\n        setMessage('Passwords do not match')\r\n    } else {\r\n        dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n\r\n        {loading && <Loader />}\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n\r\n            <Form.Control \r\n              type='name' \r\n              placeholder='Enter name' \r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label className='margin-top-1point5rem'>Email Address</Form.Label>\r\n\r\n            <Form.Control \r\n              type='email' \r\n              placeholder='Enter email' \r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label className='margin-top-1point5rem'>Password</Form.Label>\r\n\r\n            <Form.Control \r\n              type='password' \r\n              placeholder='Enter password' \r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label className='margin-top-1point5rem'>Confirm password</Form.Label>\r\n\r\n            <Form.Control \r\n              type='password' \r\n              placeholder='Confirm password' \r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary' className='margin-top-1point5rem'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n\r\n      <Col md={9} className='margin-top-1rem'>\r\n        <h2>My Orders</h2>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}