{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants';\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  // Created \"removeFromCart\" action, takes in an ID, uses dispatch to dispatch the reducer, uses getState to get all non-removed items from cart to reset local storage\n\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n    // \"payload\" is the data this action will use when dispatching the CART_REMOVE_ITEM reducer, specifically the ID of the product being removed\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n  // Updates localStorage State now that dispatch has removed targeted item from cartItems\n};\n\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};","map":{"version":3,"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","id","qty","dispatch","getState","data","get","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress","savePaymentMethod"],"sources":["C:/Users/alexa/OneDrive/Desktop/eCommerce Template/frontend/src/actions/cartActions.js"],"sourcesContent":["import axios from 'axios'\r\nimport { \r\n  CART_ADD_ITEM, \r\n  CART_REMOVE_ITEM, \r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty\r\n    }\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n// Created \"removeFromCart\" action, takes in an ID, uses dispatch to dispatch the reducer, uses getState to get all non-removed items from cart to reset local storage\r\n\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id\r\n    // \"payload\" is the data this action will use when dispatching the CART_REMOVE_ITEM reducer, specifically the ID of the product being removed\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n  // Updates localStorage State now that dispatch has removed targeted item from cartItems\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {  \r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n  \r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {  \r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n  \r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,aAAa,EACbC,gBAAgB,EAChBC,0BAA0B,EAC1BC,wBAAwB,QACnB,4BAA4B;AAEnC,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAE,EAAEC,GAAG,KAAK,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAClE,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,iBAAgBL,EAAG,EAAC,CAAC;EAEvDE,QAAQ,CAAC;IACPI,IAAI,EAAEX,aAAa;IACnBY,OAAO,EAAE;MACPC,OAAO,EAAEJ,IAAI,CAACK,GAAG;MACjBC,IAAI,EAAEN,IAAI,CAACM,IAAI;MACfC,KAAK,EAAEP,IAAI,CAACO,KAAK;MACjBC,KAAK,EAAER,IAAI,CAACQ,KAAK;MACjBC,YAAY,EAAET,IAAI,CAACS,YAAY;MAC/BZ;IACF;EACF,CAAC,CAAC;EAEFa,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACd,QAAQ,EAAE,CAACe,IAAI,CAACC,SAAS,CAAC,CAAC;AAC9E,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIpB,EAAE,IAAK,CAACE,QAAQ,EAAEC,QAAQ,KAAK;EAC9D;;EAEED,QAAQ,CAAC;IACPI,IAAI,EAAEV,gBAAgB;IACtBW,OAAO,EAAEP;IACT;EACF,CAAC,CAAC;;EAEFc,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACd,QAAQ,EAAE,CAACe,IAAI,CAACC,SAAS,CAAC,CAAC;EAC5E;AACF,CAAC;;AAED,OAAO,MAAME,mBAAmB,GAAIjB,IAAI,IAAMF,QAAQ,IAAK;EACzDA,QAAQ,CAAC;IACPI,IAAI,EAAET,0BAA0B;IAChCU,OAAO,EAAEH;EACX,CAAC,CAAC;EAEFU,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,CAAC;AAC/D,CAAC;AAED,OAAO,MAAMkB,iBAAiB,GAAIlB,IAAI,IAAMF,QAAQ,IAAK;EACvDA,QAAQ,CAAC;IACPI,IAAI,EAAER,wBAAwB;IAC9BS,OAAO,EAAEH;EACX,CAAC,CAAC;EAEFU,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI,CAAC,CAAC;AAC/D,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}