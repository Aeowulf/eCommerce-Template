{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET } from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_DETAILS_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers"],"sources":["C:/Users/alexa/OneDrive/Desktop/eCommerce Template/frontend/src/actions/userActions.js"],"sourcesContent":["import axios from 'axios'\r\nimport { \r\n  USER_LOGIN_REQUEST, \r\n  USER_LOGIN_SUCCESS, \r\n  USER_LOGIN_FAIL, \r\n  USER_LOGOUT, \r\n  USER_REGISTER_REQUEST, \r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n      dispatch({\r\n        type: USER_LOGIN_REQUEST\r\n      })\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n\r\n      const { data } = await axios.post(\r\n        '/api/users/login',\r\n        { email, password },\r\n        config,\r\n      )\r\n\r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        \r\n        payload: data,\r\n      })\r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n      dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n\r\n        payload:\r\n          error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message,})\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n      dispatch({\r\n        type: USER_REGISTER_REQUEST\r\n      })\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n\r\n      const { data } = await axios.post(\r\n        '/api/users',\r\n        { name, email, password },\r\n        config,\r\n      )\r\n\r\n      dispatch({\r\n        type: USER_REGISTER_SUCCESS,\r\n        \r\n        payload: data,\r\n      })\r\n\r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        \r\n        payload: data,\r\n      })\r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n\r\n        payload:\r\n          error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message,})\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n        type: USER_DETAILS_REQUEST,\r\n      })\r\n\r\n      const { userLogin: { userInfo } } = getState()\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      }\r\n\r\n      const { data } = await axios.get(\r\n        `/api/users/${id}`,\r\n        config,\r\n      )\r\n\r\n      dispatch({\r\n        type: USER_DETAILS_SUCCESS,\r\n        \r\n        payload: data,\r\n      })\r\n  } catch (error) {\r\n      dispatch({\r\n        type: USER_DETAILS_FAIL,\r\n\r\n        payload:\r\n          error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message,})\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n        type: USER_UPDATE_PROFILE_REQUEST,\r\n      })\r\n\r\n      const { userLogin: { userInfo } } = getState()\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      }\r\n\r\n      const { data } = await axios.put(\r\n        `/api/users/profile`,\r\n        user,\r\n        config,\r\n      )\r\n\r\n      dispatch({\r\n        type: USER_UPDATE_PROFILE_SUCCESS,\r\n        \r\n        payload: data,\r\n      })\r\n  } catch (error) {\r\n      dispatch({\r\n        type: USER_UPDATE_PROFILE_FAIL,\r\n\r\n        payload:\r\n          error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message,})\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n        type: USER_LIST_REQUEST,\r\n      })\r\n\r\n      const { userLogin: { userInfo } } = getState()\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n      }\r\n\r\n      const { data } = await axios.get(\r\n        `/api/users`,\r\n        config,\r\n      )\r\n\r\n      dispatch({\r\n        type: USER_LIST_SUCCESS,\r\n        \r\n        payload: data,\r\n      })\r\n  } catch (error) {\r\n      dispatch({\r\n        type: USER_LIST_FAIL,\r\n\r\n        payload:\r\n          error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.message,})\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}