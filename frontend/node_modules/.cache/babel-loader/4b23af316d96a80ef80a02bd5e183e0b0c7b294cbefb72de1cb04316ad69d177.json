{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productCreateReviewReducer, productUpdateReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst store = configureStore({\n  reducer,\n  preloadedState: initialState,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    immutableCheck: false,\n    serializableCheck: false\n  })\n});\nexport default store;","map":{"version":3,"names":["combineReducers","configureStore","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productCreateReviewReducer","productUpdateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","store","preloadedState","middleware","getDefaultMiddleware","immutableCheck","serializableCheck"],"sources":["C:/Users/alexa/OneDrive/Desktop/eCommerce Template/frontend/src/store.js"],"sourcesContent":["import { combineReducers } from 'redux'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productCreateReviewReducer,\r\n  productUpdateReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  preloadedState: initialState,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      immutableCheck: false,\r\n      serializableCheck: false,\r\n    }),\r\n})\r\n\r\nexport default store\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SACEC,kBAAkB,EAClBC,qBAAqB,EACrBC,oBAAoB,EACpBC,oBAAoB,EACpBC,0BAA0B,EAC1BC,oBAAoB,QACf,4BAA4B;AACnC,SAASC,WAAW,QAAQ,yBAAyB;AAErD,SACEC,gBAAgB,EAChBC,mBAAmB,EACnBC,kBAAkB,EAClBC,wBAAwB,EACxBC,eAAe,EACfC,iBAAiB,EACjBC,iBAAiB,QACZ,yBAAyB;AAEhC,SACEC,kBAAkB,EAClBC,mBAAmB,EACnBC,eAAe,EACfC,kBAAkB,EAClBC,gBAAgB,EAChBC,mBAAmB,QACd,0BAA0B;AAEjC,MAAMC,OAAO,GAAGtB,eAAe,CAAC;EAC9BuB,WAAW,EAAErB,kBAAkB;EAC/BsB,cAAc,EAAErB,qBAAqB;EACrCsB,aAAa,EAAErB,oBAAoB;EACnCsB,aAAa,EAAErB,oBAAoB;EACnCsB,aAAa,EAAEpB,oBAAoB;EACnCqB,IAAI,EAAEpB,WAAW;EACjBqB,SAAS,EAAEpB,gBAAgB;EAC3BqB,YAAY,EAAEpB,mBAAmB;EACjCqB,WAAW,EAAEpB,kBAAkB;EAC/BqB,iBAAiB,EAAEpB,wBAAwB;EAC3CqB,QAAQ,EAAEpB,eAAe;EACzBqB,UAAU,EAAEpB,iBAAiB;EAC7BqB,UAAU,EAAEpB,iBAAiB;EAC7BqB,WAAW,EAAEpB,kBAAkB;EAC/BqB,YAAY,EAAEpB,mBAAmB;EACjCqB,QAAQ,EAAEpB,eAAe;EACzBqB,WAAW,EAAEpB,kBAAkB;EAC/BqB,SAAS,EAAEpB,gBAAgB;EAC3BqB,YAAY,EAAEpB;AAChB,CAAC,CAAC;AAEF,MAAMqB,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;AAEN,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAER,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACtEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GACnD,CAAC,CAAC;AAEN,MAAMK,YAAY,GAAG;EACnBrB,IAAI,EAAE;IACJsB,SAAS,EAAER,oBAAoB;IAC/BS,eAAe,EAAEH;EACnB,CAAC;EACDnB,SAAS,EAAE;IAAEuB,QAAQ,EAAEL;EAAoB;AAC7C,CAAC;AAED,MAAMM,KAAK,GAAGpD,cAAc,CAAC;EAC3BqB,OAAO;EACPgC,cAAc,EAAEL,YAAY;EAC5BM,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,cAAc,EAAE,KAAK;IACrBC,iBAAiB,EAAE;EACrB,CAAC;AACL,CAAC,CAAC;AAEF,eAAeL,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}