{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst store = configureStore({\n  reducer,\n  preloadedState: initialState,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    immutableCheck: false,\n    serializableCheck: false\n  })\n});\nexport default store;","map":{"version":3,"names":["combineReducers","configureStore","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","store","preloadedState","middleware","getDefaultMiddleware","immutableCheck","serializableCheck"],"sources":["C:/Users/alexa/OneDrive/Desktop/eCommerce Template/frontend/src/store.js"],"sourcesContent":["import { combineReducers } from 'redux'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { \r\n  userLoginReducer, \r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n } from './reducers/userReducers'\r\nimport { \r\n  orderCreateReducer, \r\n  orderDetailsReducer,\r\n  orderPayReducer, \r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') \r\n  ? JSON.parse(localStorage.getItem('cartItems')) \r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') \r\n  ? JSON.parse(localStorage.getItem('userInfo')) \r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') \r\n  ? JSON.parse(localStorage.getItem('shippingAddress')) \r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: { \r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer, \r\n  preloadedState: initialState,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      immutableCheck: false,\r\n      serializableCheck: false,\r\n        })\r\n})\r\n\r\nexport default store"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,kBAAkB,EAAEC,qBAAqB,QAAQ,4BAA4B;AACtF,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SACEC,gBAAgB,EAChBC,mBAAmB,EACnBC,kBAAkB,EAClBC,wBAAwB,QAClB,yBAAyB;AACjC,SACEC,kBAAkB,EAClBC,mBAAmB,EACnBC,eAAe,QACV,0BAA0B;AAEjC,MAAMC,OAAO,GAAGZ,eAAe,CAAC;EAC9Ba,WAAW,EAAEX,kBAAkB;EAC/BY,cAAc,EAAEX,qBAAqB;EACrCY,IAAI,EAAEX,WAAW;EACjBY,SAAS,EAAEX,gBAAgB;EAC3BY,YAAY,EAAEX,mBAAmB;EACjCY,WAAW,EAAEX,kBAAkB;EAC/BY,iBAAiB,EAAEX,wBAAwB;EAC3CY,WAAW,EAAEX,kBAAkB;EAC/BY,YAAY,EAAEX;AAChB,CAAC,CAAC;AAEF,MAAMY,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;AAEN,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAER,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACtEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GACnD,CAAC,CAAC;AAEN,MAAMK,YAAY,GAAG;EACnBd,IAAI,EAAE;IACJe,SAAS,EAAER,oBAAoB;IAC/BS,eAAe,EAAEH;EACnB,CAAC;EACDZ,SAAS,EAAE;IAAEgB,QAAQ,EAAEL;EAAoB;AAC7C,CAAC;AAED,MAAMM,KAAK,GAAGhC,cAAc,CAAC;EAC3BW,OAAO;EACPsB,cAAc,EAAEL,YAAY;EAC5BM,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,cAAc,EAAE,KAAK;IACrBC,iBAAiB,EAAE;EACjB,CAAC;AACT,CAAC,CAAC;AAEF,eAAeL,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}